{"remainingRequest":"D:\\GG\\pro\\node_modules\\babel-loader\\lib\\index.js!D:\\GG\\pro\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GG\\pro\\src\\components\\LineChart.js","dependencies":[{"path":"D:\\GG\\pro\\src\\components\\LineChart.js","mtime":1582582339174},{"path":"D:\\GG\\pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GG\\pro\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GG\\pro\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcyI7CmltcG9ydCB7IEJhciB9IGZyb20gJ3Z1ZS1jaGFydGpzJzsKaW1wb3J0IHsgYnVzIH0gZnJvbSAnQC9tYWluLmpzJzsgLy9pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwovL2NvbnN0IHJlcXVlc3QgPSBpbXBvcnQgKCdyZXF1ZXN0Jyk7CgovKg0KY29uc3QgdXJsPSdodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbj9zdGFydCcrZnJvbSsnJmVuZD0yMDEzLTA5LTA1Jw0KcmVxdWVzdCh7dXJsOnVybCxqc29uOnRydWV9LChlcnJvcixyZXNwb25zZSk9PnsNCiAgY29uc29sZS5sb2cocmVzcG9uc2UuYm9keSkNCn0pDQoNCmZldGNoKHVybCkudGhlbigocmVzcG9uc2UpPT57DQogIHJlc3BvbnNlLmpzb24oKS50aGVuKChkYXRhKT0+ew0KICAgICAgY29uc29sZS5sb2coZGF0YS5icGkpDQogIH0pDQp9KQ0KICAgZmV0Y2goJy91cGxvYWQnKS50aGVuKChyZXNwb25zZSk9PnsNCiAgcmVzcG9uc2UuanNvbigpLnRoZW4oKERhKT0+ew0KICAgIGNvbnNvbGUubG9nKERhKQ0KICB9KQ0KfSkNCg0KDQoqLwoKZXhwb3J0IGRlZmF1bHQgewogIGV4dGVuZHM6IEJhciwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBidXMuJG9uKCdzZW5kJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdmFyIHVybCA9ICdodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbj9zdGFydD0nICsgZGF0YS50aW1lMSArICcmZW5kPScgKyBkYXRhLnRpbWUyOwogICAgICBmZXRjaCh1cmwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIF90aGlzLmRhdGEgPSBPYmplY3QudmFsdWVzKGRhdGEuYnBpKTsKCiAgICAgICAgICBfdGhpcy5yZW5kZXJDaGFydCh7CiAgICAgICAgICAgIGxhYmVsczogT2JqZWN0LmtleXMoZGF0YS5icGkpLAogICAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgICBsYWJlbDogJ0dpdEh1YiBDb21taXRzJywKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZjg3OTc5JywKICAgICAgICAgICAgICBkYXRhOiBfdGhpcy5kYXRhCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvKmF4aW9zDQogICAgLmdldCh1cmwpDQogICAgLnRoZW4ocmVzcG9uc2UgPT4gKHRoaXMuaW5mbyA9IHJlc3BvbnNlLmRhdGEuYnBpKSkqLwogICAgLy8gT3ZlcndyaXRpbmcgYmFzZSByZW5kZXIgbWV0aG9kIHdpdGggYWN0dWFsIGRhdGEuCiAgfQp9Ow=="},{"version":3,"sources":["D:/GG/pro/src/components/LineChart.js"],"names":["Bar","bus","extends","created","$on","data","url","time1","time2","fetch","then","response","json","Object","values","bpi","renderChart","labels","keys","datasets","label","backgroundColor","mounted"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,SAAQC,GAAR,QAAiB,WAAjB,C,CACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAmBA,eAAe;AACbC,EAAAA,OAAO,EAAEF,GADI;AAEbG,EAAAA,OAFa,qBAEJ;AAAA;;AACPF,IAAAA,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAe,UAACC,IAAD,EAAQ;AACrB,UAAMC,GAAG,GAAG,iEAA+DD,IAAI,CAACE,KAApE,GAA0E,OAA1E,GAAkFF,IAAI,CAACG,KAAnG;AACAC,MAAAA,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgB,UAACC,QAAD,EAAY;AAC1BA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAACL,IAAD,EAAQ;AAC3B,UAAA,KAAI,CAACA,IAAL,GAAUQ,MAAM,CAACC,MAAP,CAAcT,IAAI,CAACU,GAAnB,CAAV;;AAGA,UAAA,KAAI,CAACC,WAAL,CAAiB;AACfC,YAAAA,MAAM,EAAEJ,MAAM,CAACK,IAAP,CAAYb,IAAI,CAACU,GAAjB,CADO;AAEfI,YAAAA,QAAQ,EAAE,CACR;AACEC,cAAAA,KAAK,EAAE,gBADT;AAEEC,cAAAA,eAAe,EAAE,SAFnB;AAGEhB,cAAAA,IAAI,EAAE,KAAI,CAACA;AAHb,aADQ;AAFK,WAAjB;AAYD,SAhBD;AAiBD,OAlBD;AAkBK,KApBP;AAqBD,GAxBY;AAyBbiB,EAAAA,OAzBa,qBAyBF;AACT;;;AAIA;AAED;AAhCY,CAAf","sourcesContent":["import { Bar } from 'vue-chartjs'\r\nimport {bus}from '@/main.js';\r\n//import axios from 'axios';\r\n//const request = import ('request');\r\n/*\r\nconst url='https://api.coindesk.com/v1/bpi/historical/close.json?start'+from+'&end=2013-09-05'\r\nrequest({url:url,json:true},(error,response)=>{\r\n  console.log(response.body)\r\n})\r\n\r\nfetch(url).then((response)=>{\r\n  response.json().then((data)=>{\r\n      console.log(data.bpi)\r\n  })\r\n})\r\n   fetch('/upload').then((response)=>{\r\n  response.json().then((Da)=>{\r\n    console.log(Da)\r\n  })\r\n})\r\n\r\n\r\n*/\r\nexport default {\r\n  extends: Bar,\r\n  created(){\r\n    bus.$on('send',(data)=>{\r\n      const url = 'https://api.coindesk.com/v1/bpi/historical/close.json?start='+data.time1+'&end='+data.time2\r\n      fetch(url).then((response)=>{\r\n        response.json().then((data)=>{\r\n          this.data=Object.values(data.bpi)\r\n\r\n\r\n          this.renderChart({\r\n            labels: Object.keys(data.bpi) ,\r\n            datasets: [\r\n              {\r\n                label: 'GitHub Commits',\r\n                backgroundColor: '#f87979',\r\n                data: this.data\r\n              }\r\n            ]\r\n          })\r\n            \r\n\r\n        })\r\n      })  })\r\n  },\r\n  mounted () {\r\n    /*axios\r\n    .get(url)\r\n    .then(response => (this.info = response.data.bpi))*/\r\n\r\n    // Overwriting base render method with actual data.\r\n \r\n  }\r\n}"]}]}